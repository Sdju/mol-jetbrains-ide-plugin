{
  parserClass="com.zede.mol.viewTree.parser.ViewTreeParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="ViewTree"
  psiImplClassSuffix="Impl"
  psiPackage="com.zede.mol.viewTree.psi"
  psiImplPackage="com.zede.mol.viewTree.psi.impl"

  elementTypeHolderClass="com.zede.mol.viewTree.psi.ViewTreeTypes"
  elementTypeClass="com.zede.mol.viewTree.psi.ViewTreeElementType"
  tokenTypeClass="com.zede.mol.viewTree.psi.ViewTreeTokenType"
}

viewTreeFile ::= (component|LF)*

private gap ::= (SPACE COMMENT)? (COMMENT|LF)+
private instance ::= NAME|FQN_NAME
private value ::= instance|NUMBER
private modifier ::= SPACE* (OPERATOR_ATOM (SPACE* NAME)?)|(OPERATOR_OBJECT SPACE* NAME)

component ::= instance SPACE+ instance gap componentAttributes?
componentAttributes ::= INDENT (componentAttribute)+ DEDENT
private componentAttribute ::= NAME modifier? SPACE+ componentValue
private simpleValue ::= stringValue | numberValue | arrayValue | objectValue
private componentValue ::= simpleValue | leftBindValue | rightBindValue | twoWayBindValue

private stringValue ::= (OPERATOR_LOCALISATION SPACE+)? VALUE_PREFIX VALUE? gap
private numberValue ::= NUMBER gap
private arrayValue ::= OPERATOR_ARRAY gap arrayItemsValue
private objectValue ::= OPERATOR_OBJECT gap objectKeysValue

arrayItemsValue ::= INDENT (componentValue)* DEDENT
objectKeysValue ::= INDENT (OPERATOR_REASSIGN gap)? componentAttribute* DEDENT

private leftBindValue ::= OPERATOR_LEFT_BIND SPACE+ NAME modifier? SPACE* ((FQN_NAME gap componentAttributes?)|simpleValue|gap)?
private rightBindValue ::= OPERATOR_RIGHT_BIND SPACE+ NAME modifier? SPACE* ((FQN_NAME gap componentAttributes?)|simpleValue|gap)?
private twoWayBindValue ::= OPERATOR_TWO_WAY_BIND SPACE+ NAME modifier? SPACE* (gap | simpleValue)
